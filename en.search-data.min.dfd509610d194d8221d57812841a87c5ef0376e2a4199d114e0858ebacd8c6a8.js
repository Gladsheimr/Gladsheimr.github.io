'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/docs/page-one/','title':"Page One",'content':""});index.add({'id':1,'href':'/categories/','title':"Categories",'content':""});index.add({'id':2,'href':'/docs/','title':"Docs",'content':""});index.add({'id':3,'href':'/','title':"Introduction",'content':"Glaðsheimr  \nThe fifth is Glaðsheimr, and gold-bright there Stands Valhöll stretching wide; And there does Oðinn each day choose The men who have fallen in fight.\nGrímnismál, The says of Grímnir\n  Vision Glaðsheimr is an open project to research building complete applications that are capable of providing true privacy and transparency to end users. Research is focused on developing use cases and technologies that leverages concepts such as TinyML, FGPAs and concepts of orchestration. Glaðsheimr will also be develop tooling (Mjolnir) to allow application developers to design, build and orchestrate applications.\nWhat is Orchestration? Orchestration is the automatic process of managing or scheduling the work of individual components (models, sensors, frontend) within multiple devices. Orchestration automates such things as configuration, availability, provisioning and health monitoring of the application.\nOrchestration is a common concept in web development (with projects such as Kubernetes) although the scope for orchestration in Mjolnir.\nProof Of Concepts  Vant: Does your water intake increases morning energy?  Water tracking: Audio signals based on poured water Person energy: Time spent in bed tracked with human presence or sleep tracking Integration using only bluetooth mesh protocols   Another concept is built around exploring metabolic syndrome  "});index.add({'id':4,'href':'/docs/proof_of_concepts/vant/','title':"Proof of Concept",'content':"By Kartik Thakore\nVant Vant is a\n"});index.add({'id':5,'href':'/docs/research/','title':"Research",'content':"Research by Kartik Thakore\nGlaðsheimr research is based around a vision:\nOrchestrating and integrating ML, devices and engineering principles to provide complete stack applications as opposed to full stack\nCybernetics and Mobile Health An Complete Stack Application\nDefining cybernetics as a merger between hardware, software and biology we can imagine health (behavior change) apps today as such a device.\n sequenceDiagram Alice-App: Sets goal App-Alice: recommends caloric tracking program Alice-Alice's Biology: Implements program Alice's Biology-Alice: Homeostatic and Physiological Resistance Alice's Biology-Alice's Devices: Automated Tracking Alice's Devices-App: Tracking integrated App-Alice: Updated recommendations Inefficient Integrations In this case Alice, her biology, software on the app and wearable devices are integrated into an overall goal; Making Alice Healthy. This type of complete stack application are requires extra steps to provide a lack luster solution (mobile health apps are notoriously bad at achieving results and health is hard). Data used to determine successes of the application is derivative and the end results of numerous processes.\nThere are a plethora of moving parts and engineering wise this solution is not idea. In integration we want to have a simple critical path that allows:\n Measurable feedback independent of human bias (people lie about their weight regularly) Reduce unnecessary interfacing components Remove artificial boundaries in development  Biology is not understood at app development level Algorithms are unaware of how to determine a success/failure Alice has to understand how to implement the program    Back to the Drawing Board Focusing on the goal \u0026ldquo;Making Alice Healthy\u0026rdquo; we can start to re-engineer a concrete solution. For the purpose of this exercise let\u0026rsquo;s determine health based on most common diseases for Alice\u0026rsquo;s cohort (54F, High BMI, Hyperglycimia). Although Health could be defined medically, we also have to consider how Alice determines healthy and thus focusing on quality of life makes more sense. Alice\u0026rsquo;s overall lifestyles plays a larger part in determining what Health means.\nLet\u0026rsquo;s say that top causes of loss of quality of life for Alice\u0026rsquo;s cohort are metabolic syndrome1 (which wouldn\u0026rsquo;t be too unreasonable). Digesting these diseases into biological signals would provided the most efficient interface to measuring success of our complete stack application.\nMeasuring with Biological Signals\n Waist Circumference Triglycerides HDL Cholesterol Blood Pressure Fasting Glucose  Using these signals gives a clearer picture of \u0026ldquo;health\u0026rdquo;, and treating these as outputs from \u0026ldquo;Alice\u0026rsquo;s Biology\u0026rdquo; is a good starting point. The most frequent signal used is Waist Circumference which should be simple to collected in the morning when Alice wakes up. Waist circumference can be measured in the bathroom and to meet privacy concerns with a disconnected smart device (this device would not connect to any server).\nThe waist circumference measurements (with measurement errors) would then be collected to a device that is able to aggregate with other signals (either from external sources or locally). In the case of Alice, let\u0026rsquo;s imagine the solution to have:\n Waister: Waist Circumference - FPGAs + Camera in washroom GoodFood: Food Quality - FPGAs + Cameras in Kitchen TooManyCooks: Cooking Frequency - Presence detection TinyML Device AliceHealth: Labeling and Data Update - Mobile App  Each of these services can be put into a local cloud or more apt endpoint cloud.\nEndpoint Cloud graph TD A[Alice] --| Labels | B(Alice Health App) B -- R{should retrain ?} R -- C(Training Device) C --| Deploys | D[TooManyCooks] C --| Deploys | E[Waister] C --| Deploys | F[GoodFood] D --| Presence Detected\nin Kitchen | F[Signal Aggregrator] E --| Waist\nCircumference\nMeasurement | F F --| Low Power Bluetooth Collection | B In this scenario locality of computation, modelling and data is kept to where Alice is and where her health matters. Developing such an application requires a few underlying components:\n Signal Aggregator - Arudino BLE Training Device - Raspberry Pi or Coral Device  These components need to part of the orchestration fabric. The major advantages to this step is the fewest number of integrations back to a central server that is out of control/hand for Alice. Additionally, in this complete stack the focus is completely relevant to specific biological signals that don\u0026rsquo;t require integration with other partners. Finally, Alice has complete control of her data and models that are used to help her. Everything is owned by her.\nIn the next chapter we will explore developing this usecase.\n  https://www.mayoclinic.org/diseases-conditions/metabolic-syndrome/symptoms-causes/syc-20351916 \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':6,'href':'/tags/','title':"Tags",'content':""});})();